basePath: /api/v1
definitions:
  model.AppDTO:
    properties:
      access_key_id:
        type: string
      created_at:
        type: integer
      id:
        type: integer
      identifier:
        type: string
      logo:
        type: string
      name:
        type: string
      org_id:
        type: integer
      role_id:
        type: integer
    type: object
  model.OrgDTO:
    properties:
      created_at:
        type: integer
      id:
        type: integer
      is_owner:
        type: boolean
      logo:
        type: string
      name:
        type: string
    type: object
  model.RoleDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.TokenDTO:
    properties:
      created_at:
        type: integer
      email:
        type: string
      email_verify_at:
        type: integer
      expired_at:
        type: integer
      id:
        type: string
      type:
        type: string
    type: object
  model.UserDTO:
    properties:
      email:
        example: demo@xmfunny.com
        type: string
      email_verified_at:
        example: 1635696000000
        type: integer
      id:
        example: 1
        type: integer
      is_admin:
        example: false
        type: boolean
      last_active_at:
        example: 0
        type: integer
      logo:
        example: ' '
        type: string
      name:
        example: demo
        type: string
    type: object
  model.UserWithAppDTO:
    properties:
      apps:
        items:
          $ref: '#/definitions/model.AppDTO'
        type: array
      email:
        example: demo@xmfunny.com
        type: string
      email_verified_at:
        example: 1635696000000
        type: integer
      id:
        example: 1
        type: integer
      is_admin:
        example: false
        type: boolean
      is_owner:
        type: boolean
      last_active_at:
        example: 0
        type: integer
      logo:
        example: ' '
        type: string
      name:
        example: demo
        type: string
    type: object
  service.AppCreateRequest:
    properties:
      identifier:
        type: string
      name:
        type: string
      org_id:
        type: integer
    required:
    - identifier
    - name
    - org_id
    type: object
  service.AppUpdateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - name
    type: object
  service.OrgCreateRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  service.OrgRestoreDeletedAppsRequest:
    properties:
      app_ids:
        items:
          type: integer
        type: array
    required:
    - app_ids
    type: object
  service.OrgUpdateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - name
    type: object
  service.OrgUserRoleUpdateRequest:
    properties:
      deletes:
        items:
          type: integer
        type: array
      email:
        type: string
      orgID:
        type: integer
      updates:
        items:
          properties:
            app_id:
              type: integer
            role_id:
              type: integer
          required:
          - app_id
          - role_id
          type: object
        type: array
    required:
    - email
    type: object
  service.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  service.UserRegisterEmailRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  service.UserRegisterProfileRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      password_confirm:
        type: string
      token:
        type: string
    required:
    - email
    - name
    - password
    - password_confirm
    - token
    type: object
  service.UserUpdatePasswordRequest:
    properties:
      new_password:
        type: string
      new_password_confirm:
        type: string
      old_password:
        type: string
    required:
    - new_password
    - new_password_confirm
    - old_password
    type: object
  service.UserUpdateProfileRequest:
    properties:
      name:
        type: string
    type: object
info:
  contact: {}
  description: funnydb api doc
  title: FunnyDB
  version: 0.0.1
paths:
  /apps:
    post:
      consumes:
      - application/json
      description: 创建应用
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.AppCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AppDTO'
      summary: 创建应用
      tags:
      - 应用
  /apps/{id}:
    delete:
      description: 删除应用
      parameters:
      - description: app id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: '{}'
          schema:
            type: object
      summary: 删除应用
      tags:
      - 应用
    get:
      description: 获得应用
      parameters:
      - description: app id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AppDTO'
      summary: 获得应用
      tags:
      - 应用
    put:
      consumes:
      - application/json
      description: 更新应用
      parameters:
      - description: app id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.AppUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AppDTO'
      summary: 更新应用
      tags:
      - 应用
  /current:
    get:
      description: 获取当前用户
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserDTO'
      summary: 获取当前用户
      tags:
      - 用户
  /current/orgs:
    get:
      consumes:
      - application/json
      description: 获取用户组织列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.OrgDTO'
            type: array
      summary: 获取用户组织列表
      tags:
      - 用户
  /current/password:
    put:
      consumes:
      - application/json
      description: 修改当前用户密码
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UserUpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{}'
          schema:
            type: object
      summary: 修改当前用户密码
      tags:
      - 用户
  /current/profile:
    put:
      consumes:
      - application/json
      description: 修改当前用户信息
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UserUpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserDTO'
      summary: 修改当前用户信息
      tags:
      - 用户
  /login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"message": "your are logged in"}'
          schema:
            type: object
      summary: 用户登录
      tags:
      - 登录
  /logout:
    post:
      description: 用户登出
      produces:
      - application/json
      responses:
        "200":
          description: '{"message": "your are logged out"}'
          schema:
            type: object
      summary: 用户登出
      tags:
      - 登录
  /orgs:
    post:
      consumes:
      - application/json
      description: 创建组织
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.OrgCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrgDTO'
      summary: 创建组织
      tags:
      - 组织
  /orgs/{id}:
    delete:
      consumes:
      - application/json
      description: 删除组织
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: '{}'
          schema:
            type: object
      summary: 删除组织
      tags:
      - 组织
    put:
      consumes:
      - application/json
      description: 更新组织
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.OrgUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrgDTO'
      summary: 更新组织
      tags:
      - 组织
  /orgs/{id}/apps:
    get:
      consumes:
      - application/json
      description: 获取组织应用列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.OrgDTO'
            type: array
      summary: 获取组织应用列表
      tags:
      - 组织
  /orgs/{id}/deleted-apps:
    get:
      description: 获取已删除应用列表
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AppDTO'
            type: array
      summary: 获取已删除应用列表
      tags:
      - 组织
    put:
      description: 恢复已删除应用
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.OrgRestoreDeletedAppsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{}'
          schema:
            type: object
      summary: 恢复已删除应用
      tags:
      - 组织
  /orgs/{id}/members:
    get:
      description: 获取组织用户列表
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: integer
      - description: app id
        in: query
        name: app_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserDTO'
            type: array
      summary: 获取组织用户列表
      tags:
      - 组织
  /orgs/{id}/owners:
    get:
      description: 获取拥有者列表
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserDTO'
            type: array
      summary: 获取拥有者列表
      tags:
      - 组织
  /orgs/{id}/roles:
    put:
      consumes:
      - application/json
      description: 更新组织应用权限
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: integer
      - description: app roles
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.OrgUserRoleUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.OrgDTO'
            type: array
      summary: 更新组织应用权限
      tags:
      - 组织
  /orgs/{id}/users-by-query:
    get:
      consumes:
      - application/json
      description: 查找用户和应用列表
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: integer
      - description: user email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserWithAppDTO'
      summary: 查找用户和应用列表
      tags:
      - 组织
  /register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UserRegisterEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"message": "your are logged in"}'
          schema:
            type: object
      summary: 用户注册
      tags:
      - 注册
  /register/profile:
    post:
      consumes:
      - application/json
      description: 用户完善注册信息
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UserRegisterProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserDTO'
      summary: 用户完善注册信息
      tags:
      - 注册
  /register/token:
    get:
      consumes:
      - application/json
      description: 用户注册 token 信息
      parameters:
      - description: register token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TokenDTO'
      summary: 用户注册 token 信息
      tags:
      - 注册
  /roles:
    get:
      description: 获取全部角色列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.RoleDTO'
            type: array
      summary: 获取全部角色列表
      tags:
      - 角色
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
